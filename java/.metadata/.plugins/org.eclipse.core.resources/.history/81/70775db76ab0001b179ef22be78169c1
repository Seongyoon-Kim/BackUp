package com.project;

import java.io.BufferedReader;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;

public class EmployeeNotice {
	
	private static Scanner scan;
	private final static String DATA3;
	private static ArrayList<NoticeList> list3;
	
	static {
		
		scan = new Scanner(System.in);
		DATA3 = "C:\\Project\\익명게시판_공지사항_더미.txt";
		list3 = new ArrayList<NoticeList>();
		
	}
	
	public static void main(String[] args) {
		
		load();
		
		boolean loop = true;
		
		while (loop) {
			
			String sel = menu();
			
			if (sel.equals("10")) {
				
				NoticeBoard();
				
			}  else if (sel.equals("12")) {
				
				loop = false;
				
			}
			
		}
		
		System.out.println("프로그램을 종료합니다.");
		
		
		
	}//main
	
	private static void load() {
		
		try {
			
			BufferedReader reader = new BufferedReader(new FileReader(DATA3));
			
			String line = "";
			
			while ((line = reader.readLine()) != null) {
				
				NoticeList noticeList = new NoticeList();
				
				String[] temp = line.split("■");
				
				noticeList.setSeq(temp[0]);
				noticeList.setTitle(temp[1]);
				noticeList.setRegDate(temp[2]);
				
				String tempContent = "";
				
				while (!(line = reader.readLine()).equals("=====================")) {
					
					tempContent += line + "\r\n";
					
				}
				
				noticeList.setContent(tempContent);
				
				list3.add(noticeList);
				
			}
			
			reader.close();
			
		} catch (Exception e) {
			System.out.println("EmployeeNotice load: " + e);
		}
		
	}

	/**
	 * 공지사항을 보여주는 메소드입니다.
	 */
	private static void NoticeBoard() {
		
		System.out.println("<공지사항 게시판>");
		System.out.println("===========================================================");
		System.out.println("[번호]\t[제목]\t\t[날짜]");
		
		for (NoticeList noticeList : list3) {
			
			String title = noticeList.getTitle().replace("\r\n", " ");
			
			if (title.length() > 5) {
				
				title = title.substring(0, 5) + "..";
				
			}
			
			System.out.printf("%s\t%s\t%s\n", noticeList.getSeq(), title, noticeList.getRegDate());
			
		}
		
		System.out.println("===========================================================");
		
		System.out.println("0: 목록 끝내기");
		
		System.out.print("게시글 자세히 보기 선택(번호): ");
		
		String sel = scan.nextLine();
		System.out.println();
		
		if (sel != "") {
		
			if (!sel.equals("0")) {
				
				System.out.println("<공지사항 게시판>");
				System.out.println("===========================================================");
				
				NoticeList noticeList = getNotice(sel);
				
				System.out.printf("등록날짜: %s\n\n", noticeList.getRegDate());
				System.out.printf("제목: %s\n\n", noticeList.getTitle());
				System.out.printf("내용: %s\n\n", noticeList.getContent());
				System.out.println("===========================================================");
				System.out.println();
				
			}
		
		}
		
		pause();
		
	}
	
	/**
	 * 공지사항을 자세히 보기 위해 필요한 메소드 입니다.
	 * @param seq
	 * @return
	 */
	private static NoticeList getNotice(String sel) {
		
		for (NoticeList noticeList : list3) {
			
			if (noticeList.getSeq().equals(sel)) {
				
				return noticeList;
				
			}
			
		}
		
		return null;
	}//getNotice

	private static String menu() {
		
		System.out.println("[직원 목록 화면]");
		System.out.println("================");
		System.out.println("1. 스케줄 확인");
		System.out.println("2. 연차 신청");
		System.out.println("3. 근태 관리");
		System.out.println("4. 서류 서명");
		System.out.println("5. 코로나 자가진단");
		System.out.println("6. 급여 명세서");
		System.out.println("7. 퇴직금 및 연차수당");
		System.out.println("8. 복지 포인트");
		System.out.println("9. 연말정산");
		System.out.println("10. 공지사항 게시판");
		System.out.println("11. 익명 게시판");
		System.out.println("12. 종료");
		System.out.println("================");
		
		System.out.print("선택: ");
		
		String sel = scan.nextLine();
		
		return sel;
		
	}
	
	/**
	 * 화면을 구현한 뒤 다음으로 넘어가려면 엔터를 입력하라는 뜻의 메서드입니다.
	 */
	private static void pause() {
		
		System.out.println("엔터를 누르면 다음으로 진행합니다.");
		
		scan.nextLine();
		
	}

}//Manager
