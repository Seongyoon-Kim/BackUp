
	STS -> Spring Project의 구조와 파일
	1. src -> main > webapp > resources
		- 클라이언트 작업을 위한 리소스 폴더
		- CSS, JavaScript, Font, 이미지 등이 위치한다.
		
	2. WEB-INF > spring
		- 스프링 전반에 걸친 여러가지 설정 파일들이 위치한다.
		
	3. WEB-INF > spring > root-context.xml
		- 스프링 전반에 걸친 설정을 하는 XML
		
	4. WEB-INF > spring > appServlet > servlet-context.xml
		- 클라이언트의 요청과 응답에 관련된 스프링 설정을 하는 XML
		
	5. pom.xml
		- Project Object Model
		- 메이븐(Maven) 설정 파일
		- 프로젝트 필요한 라이브러리(*.jar)를 관리하는 용도
		
		
	스프링 프로젝트를 우리가 원하는 버전으로 설정!!
	- 프로젝트를 만들 때마다 설정
	- 자바 버전 변경
	- 스프링 버전 변경
	
	
	Hello World!!
	
	Servlet/JSP MVC -> 버전업(훌륭하게) -> Spring MVC
	
	- Controller: Servlet > Controller
	- View: JSP
	- Model: Class(DTO)
	
	
	롬복(Lombok)
	- 파일 다운(*.jar) -> 참조
	
	
	
	
	Hello 다시 한번~
	
	- HiController.java
	- hi.jsp
	
	
	
	요청 ~ 응답
	1. URL 요청
		- http://localhost:8090/spring/hi.action
		
	2. DispatcherServlet 응답(호출)
		- web.xml
		- *.action -> hi.action
		- Front Controller
		- 건물에 1층 입구에 있는 안내 데스크 직원 역할
		
	3. 해당 Controller 호출
		- hi.action
		- HiController.java를 호출
		
	4. 요청 메소드 호출
		- @RequestMapping(value="/hi.action")
		
	5. JSP 호출
		- return "hi"; ?????
		- ViewResolver 호출 -> "/WEB-INF/views/" + "hi" + ".jsp" -> "/WEB-INF/views/hi.jsp"
		
	6. JSP 페이지
		- 전에 사용하던 Servlet/JSP에서 JSP와 완벽하게 동일한 JSP 페이지를 사용한다.
		
		
		
	
	
	게시판 만들기[Servlet/JSP]
	1. list > List.java, list.jsp
	2. add > Add.java, add.jsp, AddOk.java, addok.jsp
	3. edit > Edit.java, edit.jsp, EditOk.java, editok.jsp
	4. del > Del.java, del.jsp, DelOk.java, delok.jsp
	5. view > View.java, view.jsp
	
	게시판 만들기[Spring]
	1. list > Controller.java, list.jsp
	2. add > Controller.java, add.jsp, Controller.java, addok.jsp
	3. edit > Controller.java, edit.jsp, Controller.java, editok.jsp
	4. del > Controller.java, del.jsp, Controller.java, delok.jsp
	5. view > Controller.java, view.jsp
	
	게시판 만들기[Spring]
	- Controller.java
	1. list > list.jsp
	2. add > add.jsp, addok.jsp
	3. edit > edit.jsp, editok.jsp
	4. del > del.jsp, delok.jsp
	5. view > view.jsp
	
	- com.test.spring > BoardController.java
					  > BoardDAO.java
	- views > board > list.jsp
					> add.jsp
					> view.jsp
	
	
	
	데이터 전송 + 데이터 수신
	
	- DataController.java
	- DataDAO.java
	- DataDTO.java
	
	- views -> data > add.jsp
					> addok.jsp
					
					
					
					
	의존 주입 테스트
	- com.test.spring > DIController.java
					  > Work.java
	- views > di > di.jsp
	
	
	
	
	메모장
	- Spring MVC Project
	
	1. 새 프로젝트 생성
	- File > New > Other > Spring > Spring Legacy Project
	- Project name: SpringMemo + Spring MVC Project > com.test.spring > Finish
	
	2. 스프링 버전 바꾸기
	- pom.xml
	- <java-version>1.11</java-version>
	- <org.springframework-version>4.3.8.RELEASE</org.springframework-version>
	- <source>1.11</source>
    - <target>1.11</target>
	
	3. pom.xml(Maven)
	- 프로젝트에 필요한 라이브러리 다운로드
	- lombok.jar
	- ojdbc6.jar(수동 설치)
	
	
	4. web.xml
	- 스프링 요청 주소 확장자 변경: *.memo
	- 인코딩 필터 추가
	
	
	5. root-context.xml
	- 아직 할게 없음
	
	
	6. servlet-context.xml
	- 아직 할게 없음
	
	
	7. Bootstrap + jQuery 설치
	- webapp > resources > 복사(설치)
	- webapp > inc > 복사(설치)
	
	
	8. SQL
	- SpringMemo > db.sql
	
	
	9. 파일 생성
	- com.test.spring
		> MemoController.java	//컨트롤러
		> MemoDAO.java			//DAO
		> MemoDTO.java			//DTO
		> DBUtil.java			//복사
		
	- views
		> list.jsp		//시작 페이지(목록)
		> add.jsp		//쓰기(폼)
		> addok.jsp		//쓰기(처리)
		> delok.jsp		//삭제(처리)
		> template.jsp	// 템플릿
	- webapp > resources > css
		> main.css
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	